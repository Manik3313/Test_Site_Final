<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-26T10:12:29Z" name="Default suite" finished-at="2020-11-26T10:14:09Z" duration-ms="99720">
    <groups>
    </groups>
    <test started-at="2020-11-26T10:12:29Z" name="Default test" finished-at="2020-11-26T10:14:09Z" duration-ms="99720">
      <class name="Test_Practice2">
        <test-method is-config="true" signature="setup()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:12:29Z" name="setup" finished-at="2020-11-26T10:12:57Z" duration-ms="27789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:12:58Z" name="setup2" finished-at="2020-11-26T10:13:01Z" duration-ms="3058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_1(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:01Z" name="test_1" data-provider="testdata2" finished-at="2020-11-26T10:13:02Z" duration-ms="1159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=John, lastname=Smith}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:02Z" name="setup2" finished-at="2020-11-26T10:13:02Z" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_1(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:02Z" name="test_1" data-provider="testdata2" finished-at="2020-11-26T10:13:03Z" duration-ms="916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=Jason, lastname=Doe}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:03Z" name="setup2" finished-at="2020-11-26T10:13:04Z" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_1(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:04Z" name="test_1" data-provider="testdata2" finished-at="2020-11-26T10:13:05Z" duration-ms="864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=Tim, lastname=Conway}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:05Z" name="setup2" finished-at="2020-11-26T10:13:05Z" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_2(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:05Z" name="test_2" data-provider="testdata" finished-at="2020-11-26T10:13:08Z" duration-ms="2859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperSecretPassword!, username=tomsmith}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:08Z" name="setup2" finished-at="2020-11-26T10:13:08Z" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_2(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:08Z" name="test_2" data-provider="testdata" finished-at="2020-11-26T10:13:11Z" duration-ms="2852" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperSecretPasswor, username=tomsmith}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at Test_Practice2.test_2(Test_Practice2.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:11Z" name="setup2" finished-at="2020-11-26T10:13:12Z" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_2(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:12Z" name="test_2" data-provider="testdata" finished-at="2020-11-26T10:13:15Z" duration-ms="3105" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperSecretPassword, username=tomsmith}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:24)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at Test_Practice2.test_2(Test_Practice2.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:15Z" name="setup2" finished-at="2020-11-26T10:13:16Z" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_3()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:16Z" name="test_3" finished-at="2020-11-26T10:13:17Z" duration-ms="1424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:17Z" name="setup2" finished-at="2020-11-26T10:13:17Z" duration-ms="494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_4()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:17Z" name="test_4" finished-at="2020-11-26T10:13:29Z" duration-ms="11189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_4 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:29Z" name="setup2" finished-at="2020-11-26T10:13:29Z" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_5(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:29Z" name="test_5" data-provider="testdata3" finished-at="2020-11-26T10:13:42Z" duration-ms="12493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=manik33@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_5 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:42Z" name="setup2" finished-at="2020-11-26T10:13:42Z" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_5(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:42Z" name="test_5" data-provider="testdata3" finished-at="2020-11-26T10:13:54Z" duration-ms="12172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=xyz@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_5 -->
        <test-method is-config="true" signature="setup2()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:54Z" name="setup2" finished-at="2020-11-26T10:13:55Z" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method signature="test_5(java.util.Map)[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:13:55Z" name="test_5" data-provider="testdata3" finished-at="2020-11-26T10:14:07Z" duration-ms="12251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=abc123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_5 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Test_Practice2@68d279ec]" started-at="2020-11-26T10:14:07Z" name="teardown" finished-at="2020-11-26T10:14:09Z" duration-ms="1547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Test_Practice2 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
